@import "@Assets/styles/Colors.scss";
@import "@Assets/styles/Mixins.scss";
@import "@Assets/styles/Variables.scss";
@import "@Assets/styles/KeyFrames.scss";

$OPTIONS_SIZE: "small", "medium", "large", "nosize";

$OPTIONS_TYPE: (
  "rr-navy": (
    $RR-Navy,
    $white,
    $RR-SkyBlue,
    "",
    "",
  ),
  "rr-skyblue": (
    $RR-SkyBlue,
    $RR-Navy,
    $RR-SkyBlue,
    $RR-Navy,
    $RR-SkyBlue,
  ),
  "rr-iceblue": (
    $RR-IceBlue,
    $RR-Navy,
    $RR-Navy,
    $RR-SkyBlue,
    "",
  ),
  "rr-green": (
    $RR-Green,
    $white,
    "",
    "",
    "",
  ),
  "rr-navy-border": (
    inherit,
    $RR-Navy,
    "",
    "",
    $RR-Navy,
  ),
  "rr-skyblue-border": (
    inherit,
    $RR-SkyBlue,
    "",
    "",
    $RR-SkyBlue,
  ),
  "rr-green-border": (
    inherit,
    $RR-Green,
    "",
    "",
    $RR-Green,
  ),
  "crayola": (
    $crayola,
    $white,
    "",
    "",
    "",
  ),
  "vip-teal": (
    $vip-teal,
    $white,
    "",
    "",
    "",
  ),
  "white": (
    $white,
    $RR-Navy,
    $white,
    $RR-Navy,
    $white,
  ),
  "black": (
    $black,
    $white,
    $white,
    "",
    $white,
  ),
  "alizarin-red": (
    $alizarin-red,
    $white,
    $white,
    "",
    $white,
  ),
  "gold": (
    $gold,
    $black,
    $black,
    "",
    $black,
  ),
  "teal": (
    $teal,
    $white,
    $white,
    "",
    $white,
  ),
  "beige": (
    $beige,
    $black,
    $black,
    "",
    $black,
  ),
  "express": (
    $express,
    $white,
    "",
    "",
    "",
  ),
);

@mixin construct-button-styles($bgColor, $color, $focusColor, $focusBgColor, $borderColor) {
  background-color: $bgColor;
  color: $color;

  &:hover,
  &:focus {
    background-color: $focusBgColor;
    color: $focusColor;

    @if $borderColor != "" {
      border-color: $borderColor;
    }
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
}

@each $var, $val in $OPTIONS_TYPE {
  .theme-#{$var} {
    transition: all 0.3s ease-in-out;
    border: 2px solid transparent;

    @if ($var == "rr-navy-border") {
      border: 2px solid $RR-Navy;
    } @else if ($var == "rr-skyblue-border") {
      border: 2px solid $RR-SkyBlue;
    } @else if ($var == "rr-green-border") {
      border: 2px solid $RR-Green;
    } @else if ($var == "white") {
      border: 2px solid $black;
    }

    @include construct-button-styles($val...);
  }
}

@each $var in $OPTIONS_SIZE {
  .size-#{$var} {
    @if ($var == "small") {
      min-height: 40px;
    } @else if ($var == "medium") {
      min-height: 45px;
      min-width: 150px;
    } @else if ($var == "large") {
      min-height: 50px;
      min-width: 180px;
    } @else if ($var == "nosize") {
      max-width: 100%;
      min-width: 120px;
    }
  }
}

.btn {
  border-radius: 3px;
  font-weight: 700;
  font-size: 14px;
  cursor: pointer;
  padding: 5px 30px;
  display: flex;
  align-items: center;
  text-align: center;
  white-space: nowrap;
  justify-content: center;
  font-family: $ProximaNova;

  @include media-break-point-up(sm) {
    font-size: 16px;
  }

  @media (prefers-reduced-motion: reduce) {
    &-spinner {
      animation: none;
    }
  }

  &-spinner {
    display: inline-block;
    width: 15px;
    height: 15px;
    border: 2px solid currentColor;
    border-radius: 50%;
    border-right-color: transparent;
    animation: spinner 0.75s linear infinite;
    margin-right: 10px;
  }
}
